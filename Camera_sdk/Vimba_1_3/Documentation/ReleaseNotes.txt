===========================================================================

  AVT Vimba for Linux - Release Notes 
  
  Version: 1.3.0
  Date:    2014-August-19
===========================================================================

--------------------------------
Components and Version Reference  
--------------------------------

AVT Genicam Transport Layer modules
-----------------------------------
  GigE Transport Layer (AVTGigETL.cti)                  1.3.1*

APIs
----
  Vimba C API (libVimbaC.so)                            1.3.0*
  Vimba C++ API (libVimbaCPP.so)                        1.3.0*
  Image Transform Library (libAVTImageTransform.so)     1.2.0*

Tools
-----
  Vimba Viewer (VimbaViewer)                            1.1.3* (only x86 Linux)
  Vimba Class Generator (VimbaClassGenerator)           1.0.3* (only x86 Linux)

Third Party Libraries
----------
  TinyXML (not shipped with Vimba)                      2.6.2
  Qt                                                    4.8.4  (only x86 Linux)

* Changed in this release of AVT Vimba


---------------------
Hardware Requirements
---------------------
PC or laptop with 1 GHz 32-bit or 64-bit x86 processor or better.

ARMv7-compatible 32 bit processor with 500 MHz or better (for hard-float with VFP3 support
and Thumb extension), e.g. PandaBoard, ODROID-XU, BeagleBoneBlack

When using AVT GigE cameras, a built-in Gigabit Ethernet network interface
or Gigabit Ethernet network card (one or more) is required.


-----------------------------
Tested Operating Systems
-----------------------------
AVT Vimba has been tested with the following 32 bit and 64 bit x86
operating systems:

   Ubuntu (Tested with version 12.04 LTS "Precise Pangolin")
   Debian (Tested with version 6 "Squeeze")
   Fedora (Tested with version 17 "Beefy Miracle")

   
AVT Vimba has been tested with the following 32-bit ARM
operating systems:

   Ubuntu hard-float (Tested with version 12.04 LTS "Precise Pangolin")
   Ubuntu soft-float (Tested with version 11.10 "Oneiric Ocelot")
   Angstrom hard-float (Tested with version 2012.12)
 
   If running soft-float applications on hard-float boards, it might become
   necessary to install additional runtime libraries for soft-float support.

AVT Vimba is most likely while not guaranteed to be compatible to follow up 
versions of the aforementioned environments.

Please note that 1394 support is not available for Linux.


------------
Installation
------------
AVT Vimba comes as a tarball. In order to set up Vimba, follow these steps:

- Uncompress the archive with the command tar -xf ./AVTVimba.tgz to a
  directory you have writing privileges for like /opt. Under this directory
  Vimba will be installed in its own folder. In the following, we will refer
  to this path as [InstallDir].
- Go to [InstallDir]/AVTGigETL and execute the shell script Install.sh with
  super user privileges (e.g., sudo./Install.sh). This registers the 
  GENICAM_GENTL32_PATH and/or the GENICAM_GENTL64_PATH environment variable
  through a startup script in /etc/profile.d so that every GenICam GenTL
  consumer (such as the examples that ship with AVT Vimba) can access the
  AVT Gigabit Ethernet Transport Layer. Please note that this is a
  per-user setting.
- Log off once. When you log on again, these changes will have been applied
  to the system.
  
Now you are ready to run the VimbaViewer that can be found in Vimba/Viewer/Bin.
This program allows you to configure your AVT cameras and capture images.

In order to change the IP configuration of a camera in a foreign subnet,
VimbaViewer must be run with super user privileges 
(e.g., sudo -E ./VimbaViewer).
Note that running it as root user instead of using sudo -E requires the
GENICAM_GENTL32_PATH and / or GENICAM_GENTL64_PATH being set for the
root user as well.

Vimba includes many precompiled examples that can be found in
AVTVimba/VimbaC/Examples/Bin and AVTVimba/VimbaCPP/Examples/Bin.
If you want to compile these examples yourself, please refer to the user guide
for instructions and required packages.

For uninstalling Vimba, remove the startup scripts by running the shell script
Uninstall.sh as super user. This prevents any GenTL consumer from loading the
AVT Gigabit Ethernet Transport Layer. Then simply remove the installation
directory.

---------------------
Changes and Bug-fixes
---------------------
Package for ARMv7 (new)
  - Support of Vimba C API
  - Support of Vimba C++ API
  - Support of GigE Transport Layer

Package for other Linux systems
  - Added a Vimba Tour document and a Vimba Quickstart Guide
  - Improved the other documents
  - Added examples for Vimba C and C++
  - Added an OpenMP version of the Vimba Image Transform Library

Vimba C
  - Fixed feature access for ancillary data
  - Made device discovery blocking
  - Added system feature GeVDiscoveryAllDuration for adjustable waiting time
  - Fixed issues with mixed feature names
  - Bug-fixes for improving stability

Vimba C++
  - Fixed feature access for ancillary data
  - Changes caused by bug fixes in Vimba C

Vimba Image Transform Library
  - Allowed more input for VmbSetImageInfoFromString
  - Corrected return codes
  - Removed transformations to Mono10/12/14 and big-endian data

GigE Transport Layer
  - Added a document for GigE camera features
  - Changed the supported GenTL version to 1.3 (e.g. new feature categories
    BufferHandlingMode and StreamInformation)
  - Separate features for heartbeat timeout and heartbeat interval
  - Adjustable device discovery waiting time
  - Fixed issues with similar serial numbers
  - Fixed issues with many network interfaces

Vimba Viewer
  - Improved handling for GigE camera list changes
  - Fixed issues around saving images
  - GUI usage improvements

Vimba Class Generator
  - Minor changes to appearance and documentation


------------
Known Issues
------------
- When experiencing trouble with image acquisition try to increase the priority
  of your application with "sudo -E nice -n -20 <command>".

GigE Transport Layer:
- A change of the available camera access modes cannot be reported for cameras
  in different subnets or with malconfigured IP addresses. These cameras can
  be accessed in configuration mode from different hosts simultaneously.

------------------------------
AVT Technical Software Support
------------------------------
You can reach the AVT Technical Software Support via the corresponding contact 
form for your region:

   Asia Pacific
   ------------
        http://www.alliedvisiontec.com/apac/support/contact-support.html 
   
   Europe, Middle East and Africa 
   ------------------------------
        http://www.alliedvisiontec.com/emea/support/contact-support.html
  
   Germany
   -------
        http://www.alliedvisiontec.com/de/support/support-kontaktieren.html

   The Americas
   ------------
        http://www.alliedvisiontec.com/us/support/contact-support.html

   China
   ------------
        http://www.alliedvisiontec.com/cn/support/contact-support.html

===========================================================================

  AVT GigE Transport Layer - Release Notes 
  
  Version: 1.3.1
  Date:    2014-Aug-15
===========================================================================

--------------------------------
Components and Version Reference  
--------------------------------

AVT Genicam Transport Layer modules
-----------------------------------
  GigE Transport Layer (AVTGigETL.cti)             1.3.1

Tools
-----
  AVT Driver Installer (AVTDriverInstaller.exe)    1.0.5
  
  
---------------------
Hardware Requirements
---------------------
PC or laptop with 1 GHz 32-bit or 64-bit x86 processor or better.

ARMv7-compatible 32 bit processor with 500 MHz or better (for hard-float with VFP3 support
and Thumb extension), e.g. PandaBoard, ODROID-XU, BeagleBoneBlack

When using AVT GigE cameras, a built-in Gigabit Ethernet network interface or 
Gigabit Ethernet network card (one or more) is required.


-----------------------------
Tested Operating Systems
-----------------------------
AVT Vimba has been tested with the following 32 bit and 64 bit x86
operating systems:

   Windows XP
   Windows 7
   Windows 8
   
   Please note that Windows RT is not supported with this version of AVT Vimba.

   Ubuntu (Tested with version 12.04 LTS "Precise Pangolin")
   Debian (Tested with version 6 "Squeeze")
   Fedora (Tested with version 17 "Beefy Miracle")

   
AVT Vimba has been tested with the following 32-bit ARM
operating systems:

   Ubuntu hard-float (Tested with version 12.04 LTS "Precise Pangolin")
   Ubuntu soft-float (Tested with version 11.10 "Oneiric Ocelot")
   Angstrom hard-float (Tested with version 2012.12)
 
   If running soft-float applications on hard-float boards, it might become
   necessary to install additional runtime libraries for soft-float support.

AVT Vimba is most likely while not guaranteed to be compatible to follow up 
versions of the aforementioned environments.


------------
Installation
------------            
The AVT GigE Transport Layer is part of the AVT Vimba SDK. For instructions how 
to install this module please refer to the AVT Vimba SDK User Guide.


---------------------
Changes and Bug-fixes
---------------------
- Support of GenICam GenTL standard 1.3
- New GenTL SFNC feature categories BufferHandlingMode and StreamInformation
- Separate features for heartbeat timeout and heartbeat interval
- Adjustable device discovery waiting time
- Fixed issues with alike serial numbers
- Fixed issues with many network interfaces on Linux
- Small bug-fixes to the Driver Installer


------------
Known Issues
------------
- When experiencing trouble with image acquisition on Linux, try to increase the
  priority of your application with "sudo -E nice -n -20 <command>".

- A change of the available camera access modes cannot be reported for cameras
  in different subnets or with malconfigured IP addresses. These cameras can
  be accessed in configuration mode from different hosts simultaneously.

  
---------------------------------------------
Correlations with other AVT Software Packages
---------------------------------------------
Please refer to the AVT Vimba SDK Release Notes.


------------------------------
AVT Technical Software Support
------------------------------
You can reach the AVT Technical Software Support via the corresponding contact 
form for your region:

   Asia Pacific
   ------------
        http://www.alliedvisiontec.com/apac/support/contact-support.html 
   
   Europe, Middle East and Africa 
   ------------------------------
        http://www.alliedvisiontec.com/emea/support/contact-support.html
  
   Germany
   -------
        http://www.alliedvisiontec.com/de/support/support-kontaktieren.html

   The Americas
   ------------
        http://www.alliedvisiontec.com/us/support/contact-support.html

   China
   ------------
        http://www.alliedvisiontec.com/cn/support/contact-support.html
